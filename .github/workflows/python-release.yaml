name: Python Release

on:
  workflow_dispatch:
    inputs:
      package:
        description: Package to release
        required: true
        type: choice
        options:
          - liman
          - liman_core
      commit:
        description: Commit to release
        required: true
        default: HEAD
        type: string

defaults:
  run:
    working-directory: ./python

jobs:
  set-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.commit == 'HEAD' && github.ref_name || github.event.inputs.commit }}
          fetch-depth: 0
      - name: Read version from VERSION file
        id: version
        run: |
          if [ -f "packages/${{ github.event.inputs.package }}/VERSION" ]; then
            echo "version=$(cat packages/${{ github.event.inputs.package }}/VERSION)" >> $GITHUB_OUTPUT
          else
            echo "Version file not found"
            exit 1
          fi

  check-workflow-status:
    needs: set-version
    runs-on: ubuntu-latest
    steps:
      - name: Check Python Checks Workflow Status
        uses: actions/github-script@v7
        with:
          script: |
            const commit = context.payload.inputs.commit;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // Get the workflow runs for the commit
            const runs = await github.rest.actions.listWorkflowRunsForRepo({
              owner,
              repo,
              commit_sha: commit,
              workflow_id: 'python-checks.yaml'
            });

            // Check if there's a successful run
            const successfulRun = runs.data.workflow_runs.find(
              run => run.conclusion === 'success'
            );

            if (!successfulRun) {
              throw new Error(
                `Commit ${commit} has not passed the Python checks workflow. ` +
                `Please ensure the commit has passed all checks before releasing.`
              );
            }

  deploy-package:
    name: ${{ github.event.inputs.package }}-${{ needs.set-version.outputs.version }}
    needs: [set-version, check-workflow-status]
    environment:
      name: package
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.commit == 'HEAD' && github.ref_name || github.event.inputs.commit }}
          fetch-depth: 0
      - name: Verify commit
        if: github.event.inputs.commit != 'HEAD'
        run: git show-ref --verify refs/tags/${{ github.event.inputs.commit }}
      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Compile Protobuf files
        run: |
          uv run poe protoc
      - run: uv build --package ${{ github.event.inputs.package }} --out-dir dist/
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: python/dist/
