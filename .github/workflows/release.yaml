name: Release Please

on:
  push:
    branches:
      - main

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      liman: ${{ steps.release-please.outputs['python/packages/liman--release_created'] }}
      liman_core: ${{ steps.release-please.outputs['python/packages/liman_core--release_created'] }}
      liman_finops: ${{ steps.release-please.outputs['python/packages/liman_finops--release_created'] }}
      liman_openapi: ${{ steps.release-please.outputs['python/packages/liman_openapi--release_created'] }}
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - uses: googleapis/release-please-action@v4
        id: release-please
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}

  release-py-packages:
    runs-on: ubuntu-latest
    needs: release-please
    if: |
      needs.release-please.outputs.liman == 'true' ||
      needs.release-please.outputs.liman_core == 'true' ||
      needs.release-please.outputs.liman_finops == 'true' ||
      needs.release-please.outputs.liman_openapi == 'true'
    strategy:
      matrix:
        package: [liman, liman_core, liman_finops, liman_openapi]
    defaults:
      run:
        working-directory: python/
    permissions:
      id-token: write
    steps:
      - name: Checkout
        if: ${{ needs.release-please.outputs[matrix.package] == 'true' }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup uv
        if: ${{ needs.release-please.outputs[matrix.package] == 'true' }}
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Build package
        if: ${{ needs.release-please.outputs[matrix.package] == 'true' }}
        run: uv build --package ${{ matrix.package }} --out-dir dist/
      - name: Publish package to PyPI
        if: ${{ needs.release-please.outputs[matrix.package] == 'true' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: python/dist/
