name: Python Checks

on:
  push:
    branches:
      - main
    paths:
      - python/**
      - .github/workflows/python-*.yaml
  pull_request:
    branches:
      - main
    paths:
      - python/**
      - .github/workflows/python-*.yaml
  workflow_dispatch:

defaults:
  run:
    working-directory: ./python

jobs:
  changes:
    name: Detect changed packages
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.changes.outputs.packages }}
    defaults:
      run:
        working-directory: .
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed packages
        id: changes
        run: |
          packages=$(python3 scripts/ci/detect_changed_packages.py python)
          echo "packages=$packages" >> $GITHUB_OUTPUT
          echo "Changed packages: $packages"

  lint:
    name: Lint ${{ matrix.package }}
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.packages != '[]'
    strategy:
      matrix:
        package: ${{ fromJson(needs.changes.outputs.packages) }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.package }}
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Install dependencies
        run: |
          uv sync --locked --all-extras
      - name: Run ruff
        run: |
          uv run poe -C packages/${{ matrix.package }} lint
      - name: Run mypy
        run: |
          uv run poe -C packages/${{ matrix.package }} mypy

  test:
    name: Test ${{ matrix.package }}-${{ matrix.python-version }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: changes
    if: needs.changes.outputs.packages != '[]'
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        package: ${{ fromJson(needs.changes.outputs.packages) }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.package }}-${{ matrix.python-version }}-${{ matrix.os }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Install dependencies
        run: |
          uv sync --locked --all-extras
      - name: Run tests
        run: |
          uv run poe -C packages/${{ matrix.package }} test

  coverage:
    name: Coverage ${{ matrix.package }}
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.packages != '[]'
    strategy:
      matrix:
        package:
          - liman_core
          - liman_finops
          - liman_openapi
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.package }}
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Install dependencies
        run: |
          uv sync --locked --all-extras
      - name: Run tests
        run: |
          uv run poe -C packages/${{ matrix.package }} coverage
      - uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: python/packages/${{ matrix.package }}/coverage.xml
          disable_search: true
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
